{
  "home": {
    "button": "Start planning",
    "welcome_msg": "Welcome"
  },
  "footer": {
    "title": "University of Applied Science Karlsruhe, Module: Ibsys II, Semester: SS2022"
  },
  "import": {
    "title": "Data import",
    "fileupload": "upload file",
    "upload": "upload",
    "formatJSON": "formatting JSON",
    "key": "key",
    "value": "value",
    "selectFile": "Select File",
    "selectFile_help": "Please select a xml file.",
    "selectedFile_name": "Selected file",
    "fileupload_emptyFile": "The selected file is empty. Please choose another file.",
    "fileupload_wrongFileType": "The selected file is not a xml file. Please choose a xml file.",
    "fileupload_parsingError": "An error occured while validating the selected xml file. Please ensure that the selected xml file is well formed.",
    "fileupload_loadDataError": "An error occured while importing the selected file. Please review the selected file.",
    "fileupload_success_snackbarMsg": "The selected xml file was imported succesfully.",
    "importedDataAvailable_hint": "You can continue working directly with the data from your previous planning. If you select and import a new xml file, the data from your previous planning will be deleted."
  },
  "forecast": {
    "title": "Production plan",
    "period_label": "Period",
    "error": {
      "NonValidNumber": "The input was not a valid number or smaller than 0!"
    }
  },
  "production": {
    "title": "In-house production",   
    "binding_orders": "Binding orders",
    "planned_stock": "Planned stock at the end of the period",
    "current_stock": "Current stock",
    "in_queue": "Orders in queue",
    "in_process": "Orders in process",
    "planned_production": "Planned production orders",
    "product": "Product",
    "predecessor_waiting_list": "Queue of the follow-up product",
    "error": {
      "planned_stock": "Planned stock at the end of the period must be bigger than 0!",
      "current_stock": "Current stock must be bigger than 0!",
      "in_queue": "Orders in queue must be bigger than 0!",
      "in_process": "Orders in process must be bigger than 0!"
    },
    "tooltip": {
      "help": "Planned production orders are calculated as follows:\n    binding orders\n+  queue of the follow-up product\n+  planned stock at the end of the period\n-   current stock\n-   orders in queue\n-   orders in process.",
      "components": "Used by",
      "calculation": "Calculation"
    }
  },
  "orderPlanning": {
    "title": "Order Planning",
    "id": "Partnumber",
    "deliveryTime": "Deliverytime",
    "deviation": "Deviation",
    "safeDeliveryTime": "Safe delivery time",
    "discontQuantity": "Discontquantity",
    "usageInP1": "Usage in P1",
    "usageInP2": "Usage in P2",
    "usageInP3": "Usage in P3",
    "stock": "Stock",
    "neededTillReplaced": "Demand till replaced",
    "orderQuantity": "Order quantity",
    "orderType": "Order type",
    "none": "none",
    "normal": "normal",
    "fast": "fast",
    "period": "Period",
    "neededTillReplacedAfterAPeriod": "Demand when ordered one period later",
    "error": {
      "NonValidOrderNumber": "The order quantity must be a number greater than 0!"
    },    
    "tooltip": {
      "safeDeliveryTime": "Safe delivery time is the sum of the deviation of the delivery time and the average delivery time.",
      "demand": "The demand per period is calculated by multiplying the use of P1, P2 and P3 by the respective quantity to be produced.",
      "demandTillReplaced": "The demand until safe delivery is determined by adding up the demand of the periods that have to be waited completely in order to reach the safe delivery target. The last period is added proportionally.",
      "orderQuantity": "The order quantity is determined by default based on the stored discount quantity and can be adjusted.",
      "orderType": "The order type is determined by default and can be adjusted. The order type is determined by checking whether the demand until safe delivery is less than the current stock. If this is the case, a fast order must be placed. If the demand until safe delivery, when the order is placed one period later, is smaller than the stock, a normal order must be placed.",
      "demandTillReplacedAfterAPeriod": "The demand until safe delivery after a order in the next period is determined by adding up the demand of the periods that have to be waited completely in order to reach the safe delivery target. The last period is added proportionally."
    }
  },
  "sequencePlanning": {
    "title": "Sequence Planning",
    "header_label_number": "No.",
    "header_label_product": "Product",
    "header_label_quantity": "Amount",
    "header_label_actions": "Actions",
    "reset_btn_label": "Reset all",
    "error": {
      "no_orders": "No production orders could be found for sequence planning."
    }
  },
  "capacity": {
    "title": "Capacity Planning", 
    "sumOfColumnTooltip": "The capacity requirements (new) is calculated by summing the values of the respective column up to this point (capacities of the individual in-house productions within this workstation).",
    "totalSetUpTimeTooltip": "The setup time results from the stored setup times for each production step that is performed at the workstation.",
    "capacityNeedDeficitPriorPeriodTooltip": "The time deficit from the previous period is determined by combining the times still needed for parts in the queue and in processing within the workstation from the input file.",
    "setUpTimeDeficitPriorPeriodTooltip": "The required setup time is totaled for each work step still to be performed from the previous period.",
    "totalTimeTooltip": "The total capacity requirement is the sum of\n the capacity requirement,\n the setup time (new),\n the cap. req. (backlog previous period) and\n the setup time (backlog previous period).",
    "shiftTooltip": "Shifts are determined by dividing the total capacity requirement by 2400 and rounding up from 1.5(1200 minutes overtime). If the shift is greater than three, the maximum possible shifts are entered(3).",
    "overTimeTooltip": "Overtime is determined by subtracting shifts * 2400 from the total capacity requirement, if the result is positive. If the number of shifts is equal to 3, the value 0 is entered here.",
    "timePerUnit": "(time per unit)",
    "tooltip": "The capacity per workstation is calculated by adding up the times.",
    "period": "Period...",
    "label": "Description",
    "bike_type": "Bike type",
    "article_code": "Item No.",
    "order_quantity": "Order quantity",
    "workstation": "Workplace",
    "back_wheel": "Rear wheel",
    "front_wheel": "Front wheel",
    "back_fender": "Mudguard rear",
    "front_fender": "Mudguard front",
    "handlebar": "Handle bar",
    "saddle": "Seat",
    "frame": "Frame",
    "pedals": "Pedal",
    "front_wheel_complete": "Front wheel complete",
    "frame_and_wheels": "Frame and wheels",
    "bike_without_pedals": "Bicycle w/o pedal",
    "bike_complete": "Bicycle complete",
    "capacity_need_new": "Capacity requirements (new)",
    "set-up_time": "Setup time (new)",
    "capacity_need_deficit_prior_period": "Cap. req. (backlog prev. periods)",
    "set-up_time_deficit_prior_period": "Setup time (backlog prev. periods)",
    "total_capacity_need": "Total capacity requirements",
    "tooltip_inhouse_planing": "",
    "shifts": "Shifts",
    "extra_hours": "Overtime",
    "C": "C",
    "L": "L",
    "M": "M",
    "CLM": "CLM",
    "I4": "E4",
    "I5": "E5",
    "I6": "E6",
    "I7": "E7",
    "I8": "E8",
    "I9": "E9",
    "I10": "E10",
    "I11": "E11",
    "I12": "E12",
    "I13": "E13",
    "I14": "E14",
    "I15": "E15",
    "I16": "E16",
    "I17": "E17",
    "I18": "E18",
    "I19": "E19",
    "I20": "E20",
    "I26": "E26",
    "I29": "E29",
    "I30": "E30",
    "I31": "E31",
    "I49": "E49",
    "I50": "E50",
    "I51": "E51",
    "I54": "E54",
    "I55": "E55",
    "I56": "E56",
    "P1": "P1",
    "P2": "P2",
    "P3": "P3",
    "error": {
      "NonValidShiftNumber": "Only one (1), two (2) or three (3) shifts are allowed.",
      "NonValidOvertimeNumber": "Overtime must be between 0 and 1200.",
      "NonOverTimeAllowed": "No additional overtime allowed when 3 shifts were selected"
    }
  },
  "directSales": {
    "title": "Direct Sales",
    "quantity": "Quantity",			
    "price"	:	"Price",
    "penalty": "Penalty",
    "error": {
      "NonValidNumber": "The input was not a valid number or smaller than 0!",
      "NonMultipleOfTen": "The input has to be a multiple of 10!"
    }
  },
  "export": {
    "title": "Data Export",
    "pieces": "pcs."
  },
  "btn": {
    "next": "Next",
    "back": "Back",
    "yes": "Yes",
    "no": "No",
    "split": "Splitten",
    "delete": "LÃ¶schen"
  },
  "dialog": {
    "title": "Warning",
    "message": "Do you really want to leave the current planning run?"
  },
  "error": {
    "NonValidNumber": "The input was not a valid number or smaller than 0!",
    "NonMultipleOfTen": "The input has to be a multiple of 10!",
    "GreaterThanMaxValue": "The maximum permitted number is: "
  }
}